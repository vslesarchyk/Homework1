package by.homework.tasks.task8;

public class StringModifier {

//2. Дан текст:
//"Каждая строка, создаваемая с помощью оператора new,литерала (заключенная в двойные апострофы) и ли метода класса, создающего строку, является экземпляром класса String. Особенностью объекта класса String является то, что его значение не может быть изменено после создания объекта при помощи любого метода класса. Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке. Произведенные изменения можно сохранить переинициализируя ссылку."
//2.1 В тексте после символа каждого слова с индексом k вставить заданную подстроку. Используемые методы (split(), substring())
//Вынести это в отдельный метод с сигнатурой public String (int k, String text)

//Метод для вставки подстроки после k-го символа каждого слова
        public String insertSubstring(int k, String text, String substring) {
            // Разделяем текст на слова
            String[] words = text.split(" ");

            // Проходим по каждому слову
            for (int i = 0; i < words.length; i++) {
                // Проверяем, достаточно ли символов в слове
                if (words[i].length() > k) {
                    // Разделяем слово на две части
                    String part1 = words[i].substring(0, k);
                    String part2 = words[i].substring(k);
                    // Собираем слово с вставкой подстроки
                    words[i] = part1 + substring + part2;
                }
            }

            // Собираем текст обратно
            return String.join(" ", words);
        }

        public static void main(String[] args) {
            String text = "Каждая строка, создаваемая с помощью оператора new,литерала (заключенная в двойные апострофы) и ли метода класса, создающего строку, является экземпляром класса String. " +
                    "Особенностью объекта класса String является то, что его значение не может быть изменено после создания объекта при помощи любого метода класса. " +
                    "Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная ссылка при этом сохраняет прежнее значение и хранится в стеке. " +
                    "Произведенные изменения можно сохранить переинициализируя ссылку.";

            StringModifier modifier = new StringModifier();

            // Пример использования: вставляем "!" после 3-го символа каждого слова
            String result = modifier.insertSubstring(3, text, "!");
            System.out.println(result);
        }
    }

